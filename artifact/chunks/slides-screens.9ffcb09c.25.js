(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{1127:function(e,t,n){"use strict";n.r(t),n.d(t,"Screens",(function(){return C}));var a=n(0),r=n.n(a),c=n(6),l=n.n(c),i=(n(108),n(67)),o=n(35),s=n(9),u=n(241),d=(n(1140),function(e){for(var t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",n="",a=e;a>0;--a)n+=t[Math.floor(Math.random()*t.length)];return n}),m=n(1141);n(83);function p(e,t,n,a,r,c,l){try{var i=e[c](l),o=i.value}catch(e){return void n(e)}i.done?t(o):Promise.resolve(o).then(a,r)}function v(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var c=e.apply(t,n);function l(e){p(c,a,r,l,i,"next",e)}function i(e){p(c,a,r,l,i,"throw",e)}l(void 0)}))}}var f=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)};f.findScreens=function(){var e=v(regeneratorRuntime.mark((function e(t){var n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.id,a=t.query,e.next=3,m.a.GETResource({appName:"slides",resource:"screens",id:n,query:a});case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),f.createScreen=function(){var e=v(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,m.a.POSTResource({appName:"slides",resource:"screens",data:t});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),f.updateScreen=function(){var e=v(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,m.a.PATCHResource({appName:"slides",resource:"screens",id:t,data:n});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),f.deleteScreen=function(){var e=v(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,m.a.DELETEResource({appName:"slides",resource:"screens",id:t});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();var h=f,E=n(82),g=[{label:"Tigers Milk | Camps Bay",geometry:{coordinates:[18.3700495,-33.9504259]}},{label:"Tigers Milk | Kloof Street",geometry:{coordinates:[18.4108578,-33.9298895]}},{label:"Tigers Milk | Long Street",geometry:{coordinates:[18.4228499,-33.94212]}},{label:"Tigers Milk | Claremont",geometry:{coordinates:[18.4548286,-33.9783434]}},{label:"Tigers Milk | Muizenberg",geometry:{coordinates:[18.4606702,-34.1080387]}}],b=function(e){var t=e.theme;return r.a.createElement("div",{id:"screen-map",style:{position:"relative",height:"calc(100vh - 3rem - 1px)"}},r.a.createElement(s.z,{theme:t,points:g}))};b.defaultProps={theme:"dark"};var y=n(1152),w=n.n(y),S=n(1153),N=n.n(S),O=n(1154),R=n.n(O),x="Screens",T="desktop";function k(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function j(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function D(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var n=[],a=!0,r=!1,c=void 0;try{for(var l,i=e[Symbol.iterator]();!(a=(l=i.next()).done)&&(n.push(l.value),!t||n.length!==t);a=!0);}catch(e){r=!0,c=e}finally{try{a||null==i.return||i.return()}finally{if(r)throw c}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var C=function(e){var t,n,c,i=D(Object(a.useState)(!0),2),o=i[0],p=i[1],v=D(Object(a.useState)([]),2),f=v[0],E=v[1],g=D(Object(a.useState)([]),2),y=g[0],S=g[1],O=D(Object(a.useState)(""),2),C=O[0],I=O[1],A=D(Object(a.useState)(""),2),P=(A[0],A[1]),U=D(Object(a.useState)([]),2),M=U[0],G=(U[1],D(Object(a.useState)(!1),2)),L=G[0],z=G[1],F=D(Object(a.useState)(!1),2),V=F[0],_=F[1],H=D(Object(a.useState)(null),2),Y=H[0],B=H[1],Q=D(Object(a.useState)(null),2),W=(Q[0],Q[1]),J=D(Object(a.useState)(null),2),K=J[0],q=J[1],X=D(Object(a.useState)(null),2),Z=X[0],$=X[1],ee=Object(a.useRef)(null);Object(a.useEffect)((function(){re()}),[]);var te,ne=function(e){return function(){_(!0),$(e)}},ae=function(e,t){return function(){q(t.id),W(e),console.log(K)}},re=function(){p(!0),h.findScreens({}).then((function(e){var t=e.data.map((function(e){return function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?k(Object(n),!0).forEach((function(t){j(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):k(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e,{id:e._id})}));E(t),p(!1)})).catch(m.a.handleError(e.addToast))};return r.a.createElement("div",{className:"page"},r.a.createElement(s.o,{isRightDark:void 0===y,leftDiv:r.a.createElement("div",null,r.a.createElement("div",{className:"page-header padded flex-row space-between"},r.a.createElement("div",{className:"flex-row auto-scroll-x"},r.a.createElement(l.a,{className:"icon",name:T}),r.a.createElement("br",null),r.a.createElement("div",{className:"title"},x)),r.a.createElement("div",null,r.a.createElement("button",{className:"primary hollow action-button",onClick:function(){return z(!L)}},r.a.createElement("div",{className:"icon"},r.a.createElement(l.a,{name:"map"}))),r.a.createElement("button",{className:"primary hollow action-button",onClick:function(){B(!1),ne("create")()}},r.a.createElement("div",{className:"icon"},r.a.createElement(l.a,{name:"plus-circle"}))))),r.a.createElement("div",{className:"divider horizontal"}),r.a.createElement(s.l,{ref:ee,showPath:!0,rootPath:"screens/",name:"Screens",resources:f,collections:M,resourceIcon:T,onClickItem:function(e){S(e),console.log(e)},isLoading:o})),rightDiv:r.a.createElement("div",null,r.a.createElement("div",{className:"page-header padded"},y?r.a.createElement("div",{className:"full-width flex-row space-between"},r.a.createElement(s.j,{value:y.name,onChange:function(){}}),r.a.createElement("div",null,r.a.createElement(s.b,{onSave:ne("save"),onRemove:ne("remove"),onClose:ne("close")}))):r.a.createElement("div",null,"Get Started")),r.a.createElement("div",{className:"divider horizontal"}),L?r.a.createElement(b,{theme:void 0===y?"dark":"light"}):y?r.a.createElement("div",{className:"auto-scroll-y",style:{position:"relative",height:"calc(100vh - 3rem)"}},r.a.createElement(s.a,{isOpenDefault:!0,title:"Details"},r.a.createElement("div",{className:"padded align-center"},r.a.createElement("img",{src:R.a,style:{position:"relative",width:"28rem",margin:"auto"}}),r.a.createElement("div",{className:"align-center",style:{position:"absolute",top:"6rem",width:"calc(100% - 2rem)"}},r.a.createElement("br",null),r.a.createElement("div",null,(null==y?void 0:y.status)&&function(e){var t;switch(e){case"on":t="success";break;case"off":t="warning";break;default:t="#aaa"}return r.a.createElement("span",{className:t,style:{padding:"0 0.5rem 0 0.5rem",height:"2rem",lineHeight:"2rem",backgroundColor:t,borderRadius:"1rem",color:"white"}},e.toUpperCase())}((null===(t=y.health)||void 0===t?void 0:t.status)||"")),r.a.createElement("br",null),r.a.createElement("div",null,r.a.createElement("strong",null,y.code)),r.a.createElement("br",null),r.a.createElement("div",null,(null==y?void 0:y.status)&&(te=y.status.storage,te&&r.a.createElement("div",{className:"flex-row",style:{margin:"auto",width:"12rem"}},r.a.createElement(s.f,{diameter:24,progress:te&&te.ratio,color:"#00adee",style:{marginRight:"0.5rem"}}),r.a.createElement("div",null,te.current," / ",te.total)))),r.a.createElement("br",null),r.a.createElement("div",null,"".concat(null==y?void 0:null===(n=y.display)||void 0===n?void 0:n.width," x ").concat(null==y?void 0:null===(c=y.display)||void 0===c?void 0:c.height))),r.a.createElement("div",null,r.a.createElement("br",null),y.platform&&r.a.createElement("div",{className:"flex-row space-between"},r.a.createElement("div",null,r.a.createElement("div",null,r.a.createElement("b",null,y.platform)),r.a.createElement("br",null),r.a.createElement("div",{className:"divider horizontal",style:{width:"200px",margin:"auto"}}),r.a.createElement("br",null),r.a.createElement("div",null,y.cores," cores"),r.a.createElement("div",null,y.ram,"GB RAM")),r.a.createElement("div",null,r.a.createElement("br",null),r.a.createElement("button",{className:"primary hollow round"},"  ping  ")),r.a.createElement("div",null,r.a.createElement("div",null,r.a.createElement("b",null,"Connection")),r.a.createElement("br",null),r.a.createElement("div",{className:"divider horizontal",style:{width:"200px",margin:"auto"}}),r.a.createElement("br",null),r.a.createElement("div",null,y.connectionType," | ",y.connectionSpeed," Mbps")))))),r.a.createElement("div",{className:"divider horizontal"}),r.a.createElement(s.a,{isOpenDefault:!0,title:"Schedule"},r.a.createElement("div",{className:"padded"},r.a.createElement("div",{style:{width:"10rem",height:"6rem",marginRight:"0.5rem",border:"1px solid lightgrey",padding:"1rem",cursor:"pointer"}},y.scheduleId,r.a.createElement("div",null,"SVG Preview of Calendar Week Schedule")))),r.a.createElement("div",{className:"divider horizontal"}),r.a.createElement(s.a,{isOpenDefault:!0,title:"Slideshows"},r.a.createElement("div",{className:"flex-row flex-wrap padded"},(y.slideIds||[]).map((function(e,t){return r.a.createElement("div",{key:"".concat(e).concat(t),className:"card",style:{width:"10rem",height:"6rem",marginRight:"0.5rem",border:"1px solid lightgrey",padding:"1rem",cursor:"pointer"}},e)})))),r.a.createElement("div",{className:"divider horizontal"}),r.a.createElement(s.a,{isOpenDefault:!0,title:"Screensaver"},r.a.createElement("div",{className:"padded"},r.a.createElement("div",null,"This is the content displayed when no slideshow is currently playing"),r.a.createElement("ul",null,r.a.createElement("li",null,"Time"),r.a.createElement("li",null,"Time & Screen Name"),r.a.createElement("li",null,"Screen Name"),r.a.createElement("li",null,"Splash Image (Paying customers)"))))):r.a.createElement("div",{className:"padded flex-row",style:{position:"relative",height:"calc(100vh - 6rem)"}},r.a.createElement("div",{id:"guide"},r.a.createElement("div",{className:"section"},"1. Add a Screen"),r.a.createElement("div",null,"To show your information on display devices, start with creating a Virtual Screen."),r.a.createElement("img",{src:w.a,className:"help-gif"}),r.a.createElement("div",{className:"section-end"}),r.a.createElement("div",{className:"section"},"2. Link to Device"),r.a.createElement("div",null,"After you've created a virtual screen, time to link it up to a real one.",r.a.createElement("br",null),"Go on the desired device, visit ",r.a.createElement("a",{href:window.location.toString()},"Vision Viz Client Site"),".",r.a.createElement("br",null),"There you can enter the code of your Virtual Screen, to complete the handshake."),r.a.createElement("div",{className:"section-end"}),r.a.createElement("img",{src:N.a,className:"help-gif"}),r.a.createElement("div",{className:"section"},"3. Play Content on a Screen"),r.a.createElement("div",null,"You can either assign a Slideshow to a screen, which will be repeated indefinitely.",r.a.createElement("br",null),"Or you can create a Schedule, with multiple Slideshows at different timeslots, and assign that to the Screen.",r.a.createElement("br",null),"The choice is yours!"),r.a.createElement("img",{src:w.a,className:"help-gif"}),r.a.createElement("div",{className:"section-end"})),r.a.createElement(s.i,{headerQuery:"#guide>.section",footerQuery:"#guide>.section-end"})))}),r.a.createElement(u.a,{isOpen:V,activeModal:Z,resourceName:"Screen",onCancel:function(){_(!1),$(null)},onAction:{save:function(){h.updateSchedule(y.id).then((function(t){re(),e.addToast({type:"success",content:r.a.createElement("div",null,"Screen was successfully saved")})})).catch(m.a.handleError(e.addToast))},remove:function(){h.deleteScreen(y.id).then((function(t){S(void 0),ee.current.deselect(),re(),e.addToast({type:"success",content:r.a.createElement("div",null,"Schedule was successfully saved")})})).catch(m.a.handleError(e.addToast))},create:function(){var t={name:C,code:d(6),status:{health:"UNASSIGNED"}};K&&(t.collectionId=K),h.createScreen(t).then((function(t){re(),e.addToast({type:"success",content:r.a.createElement("div",null,"Screen was successfully created")})})).catch(m.a.handleError(e.addToast))}},views:{save:r.a.createElement("div",null,r.a.createElement("div",null,"Saving will override the existing Screen."),r.a.createElement("br",null),r.a.createElement("div",null,"Are you sure?")),close:r.a.createElement("div",null,r.a.createElement("div",null,"Leaving now will discard all unsaved changes!"),r.a.createElement("br",null),r.a.createElement("div",null,"Are you sure you want to leave the Screen?")),remove:r.a.createElement("div",null,r.a.createElement("div",null,"Deleting this Screen cannot be undone!"),r.a.createElement("br",null),r.a.createElement("div",null,"Are you sure?")),create:r.a.createElement("div",null,r.a.createElement("div",{className:"flex-column"},r.a.createElement("input",{onChange:function(e){I(e.target.value)},className:"full-width-padded",placeholder:"Screen's name..."}),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("label",null,r.a.createElement("input",{type:"checkbox",checked:Y,onChange:function(){return B(!Y)}}),r.a.createElement("span",null,"Add to a ",r.a.createElement("strong",null," ",r.a.createElement(l.a,{name:"folder"}),"  Collection"))),Y&&r.a.createElement("div",{style:{marginTop:"1rem"}},r.a.createElement("input",{type:"text",onChange:function(e){P(e.target.value)},className:"full-width-padded",placeholder:"Collection's name..."}),r.a.createElement("br",null),r.a.createElement("br",null),"OR select a collection:",r.a.createElement("br",null),r.a.createElement("br",null),Y&&r.a.createElement("div",null,M.map((function(e,t){return r.a.createElement("label",{key:e.id,className:"sidebar-collection",style:{color:"".concat(K===e.id?"#00adee":"initial")},onClick:ae(t,e)},"  ",r.a.createElement(l.a,{name:"folder"}),"  ",e.name)}))))))}}))};t.default=Object(i.b)((function(e){return{screens:e.session.screens,screen:e.session.screen}}),(function(e){return Object(o.b)({addToast:E.a,setVideoModal:E.d},e)}))(C)},1140:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var a=n(1093);n(1094),n(1095),n(1096);a.initializeApp({apiKey:"AIzaSyC-jjX9f71GjxEy-potKYFaQJg8kAsY7GA",authDomain:"vision-identity.firebaseapp.com",databaseURL:"https://vision-identity.firebaseio.com",projectId:"vision-identity",storageBucket:"vision-identity.appspot.com",messagingSenderId:"1091015811145",appId:"1:1091015811145:web:30bd18e335564b5be65f98",measurementId:"G-2ZMW0R12GQ"});var r,c,l=a.auth(),i=a.database(),o=(a.storage(),function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0;return console.log("firebase.REF: ",e,t),i.ref("/".concat(e))}),s=function(e,t){return l.signInWithEmailAndPassword(e,t)},u=function(e,t){return l.createUserWithEmailAndPassword(e,t)},d=function(){return l.signOut()};t.b={AUTH:l,DB:i,REF:o,create:function(e,t){o(e).set(t)},updateItem:function(e,t){var n,a,r;i.ref().update((r=t,(a=e)in(n={})?Object.defineProperty(n,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[a]=r,n))},get:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(e){console.log("firebase.get(snapshot) UNDEFINED",e)};o(e).once("value").then((function(e){t(e)}))},watch:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{onChange:function(e){return console.log("firebase.watch: onChange(snapshot) UNDEFINED",e)},onAddItem:function(e){return console.log("firebase.watch: onItemAdd(snapshot) UNDEFINED",e)},onChangeItem:function(e){return console.log("firebase.watch: onItemChange(snapshot) UNDEFINED",e)},onDeleteItem:function(e){return console.log("firebase.watch: onItemDelete(snapshot) UNDEFINED",e)}},n=t.onChange,a=t.onAddItem,r=t.onChangeItem,c=t.onDeleteItem;n&&o(e).on("value",(function(e){n(e)})),r&&o(e).on("value",(function(e){r(e)})),a&&o(e).on("value",(function(e){a(e)})),c&&o(e).on("child_removed",(function(e){c(e)}))},logOut:d,signOut:d,emailAuthLogin:s,login:s,emailAuthRegister:u,register:u},r="testing",c={hello:"world"},o("my/test").child(r).set(c)},1141:function(e,t,n){"use strict";var a=n(25),r=n.n(a),c=n(1143);function l(e,t,n,a,r,c,l){try{var i=e[c](l),o=i.value}catch(e){return void n(e)}i.done?t(o):Promise.resolve(o).then(a,r)}function i(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var c=e.apply(t,n);function i(e){l(c,a,r,i,o,"next",e)}function o(e){l(c,a,r,i,o,"throw",e)}i(void 0)}))}}console.log("HELLOOOO",{apiURL:"".concat(c.a.apiUrl.slides)});var o=function(){var e=i(regeneratorRuntime.mark((function e(t){var n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.appName,a=t.resource,t.id,t.query,e.next=3,m("GET","".concat(c.a.apiUrl[n],"/").concat(n,"/").concat(a));case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),s=function(){var e=i(regeneratorRuntime.mark((function e(t){var n,a,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.appName,a=t.resource,r=t.data,e.next=3,m("POST","".concat(c.a.apiUrl[n],"/").concat(n,"/").concat(a),r);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),u=function(){var e=i(regeneratorRuntime.mark((function e(t){var n,a,r,l;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.appName,a=t.resource,r=t.id,l=t.data,e.next=3,m("PATCH","".concat(c.a.apiUrl[n],"/").concat(n,"/").concat(a,"/").concat(r),l);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),d=function(){var e=i(regeneratorRuntime.mark((function e(t){var n,a,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.appName,a=t.resource,r=t.id,e.next=3,m("DELETE","".concat(c.a.apiUrl[n],"/").concat(n,"/").concat(a,"/").concat(r));case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),m=function(){var e=i(regeneratorRuntime.mark((function e(t,n,a){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,r()({url:n,method:t,data:a});case 3:return e.abrupt("return",e.sent);case 6:e.prev=6,e.t0=e.catch(0),console.warn("ERROR: ".concat(err));case 9:case"end":return e.stop()}}),e,null,[[0,6]])})));return function(t,n,a){return e.apply(this,arguments)}}();t.a={POSTResource:s,PATCHResource:u,GETResource:o,DELETEResource:d,handleError:function(e){return function(t){e({type:"error",message:t})}}}},1143:function(e,t,n){"use strict";(function(e){var a=n(1097),r=n(47),c=e.env,l=e.pid,i=c.port||8005;e.env.CSC_IDENTITY_AUTO_DISCOVERY=!1;"http://localhost:".concat(i);var o="https://studio.vis-ion.io",s={development:{identity:"http://localhost:".concat(3e3,"/api"),slides:"http://localhost:".concat(3010,"/api"),schools:"http://localhost:".concat(3020,"/api")},sandbox:{identity:"http://locahost:8005/api/identity",slides:"http://locahost:8005/api/slides",schools:"http://localhost:8005/api/schools"}},u={appName:r.name,version:r.version,appUrl:o,apiUrl:s.production,environment:"production",port:i,pid:l,platform:a.platform()};console.log(u),t.a=u}).call(this,n(24))},1152:function(e,t,n){e.exports=n.p+"assets/images/screens_create.gif"},1153:function(e,t,n){e.exports=n.p+"assets/images/screens_client.png"},1154:function(e,t,n){e.exports=n.p+"assets/images/mac_monitor.png"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,