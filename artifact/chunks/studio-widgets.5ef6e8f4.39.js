(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{1140:function(e,t,a){"use strict";a.d(t,"a",(function(){return i}));var n=a(1093);a(1094),a(1095),a(1096);n.initializeApp({apiKey:"AIzaSyC-jjX9f71GjxEy-potKYFaQJg8kAsY7GA",authDomain:"vision-identity.firebaseapp.com",databaseURL:"https://vision-identity.firebaseio.com",projectId:"vision-identity",storageBucket:"vision-identity.appspot.com",messagingSenderId:"1091015811145",appId:"1:1091015811145:web:30bd18e335564b5be65f98",measurementId:"G-2ZMW0R12GQ"});var l,r,i=n.auth(),o=n.database(),c=(n.storage(),function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0;return console.log("firebase.REF: ",e,t),o.ref("/".concat(e))}),s=function(e,t){return i.signInWithEmailAndPassword(e,t)},d=function(e,t){return i.createUserWithEmailAndPassword(e,t)},u=function(){return i.signOut()};t.b={AUTH:i,DB:o,REF:c,create:function(e,t){c(e).set(t)},updateItem:function(e,t){var a,n,l;o.ref().update((l=t,(n=e)in(a={})?Object.defineProperty(a,n,{value:l,enumerable:!0,configurable:!0,writable:!0}):a[n]=l,a))},get:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(e){console.log("firebase.get(snapshot) UNDEFINED",e)};c(e).once("value").then((function(e){t(e)}))},watch:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{onChange:function(e){return console.log("firebase.watch: onChange(snapshot) UNDEFINED",e)},onAddItem:function(e){return console.log("firebase.watch: onItemAdd(snapshot) UNDEFINED",e)},onChangeItem:function(e){return console.log("firebase.watch: onItemChange(snapshot) UNDEFINED",e)},onDeleteItem:function(e){return console.log("firebase.watch: onItemDelete(snapshot) UNDEFINED",e)}},a=t.onChange,n=t.onAddItem,l=t.onChangeItem,r=t.onDeleteItem;a&&c(e).on("value",(function(e){a(e)})),l&&c(e).on("value",(function(e){l(e)})),n&&c(e).on("value",(function(e){n(e)})),r&&c(e).on("child_removed",(function(e){r(e)}))},logOut:u,signOut:u,emailAuthLogin:s,login:s,emailAuthRegister:d,register:d},l="testing",r={hello:"world"},c("my/test").child(l).set(r)},1163:function(e,t,a){e.exports=a.p+"assets/images/store_browse.gif"},1164:function(e,t,a){e.exports=a.p+"assets/images/store_add_tile.gif"},1170:function(e,t,a){"use strict";a.r(t),a.d(t,"Apps",(function(){return N}));var n=a(0),l=a.n(n),r=a(6),i=a.n(r),o=a(9),c="Apps",s="cube",d=a(70),u=a(241),m=a(1163),p=a.n(m),v=a(1164),f=a.n(v);a(1140),a(14);function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function g(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function E(e,t){return!t||"object"!==h(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function y(e){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var w=d.a.filter((function(e){return"category"!==e.type})),N=function(e){function t(e){var a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(a=E(this,y(t).call(this,e))).state={tiles:[],tilesCollections:[],filteredTiles:w,isAddModalOpen:!1},a.showAddModal=function(){return a.setState({isAddModalOpen:!0})},a.hideAddModal=function(){return a.setState({isAddModalOpen:!1})},a.onChangeName=function(e){a.setState({title:e.target.value})},a.addResource=function(){var e=a.state.activeTile;console.log("Add tile ",e)},a.goToTile=function(e){return function(){var t=a.state.filteredTiles[e];console.log("goToTile: ",e),"category"!==t.type&&a.setState({activeTile:t,activeTileIndex:e},(function(){return console.log(a.state.activeTile)}))}},a.filterTiles=function(e){var t=w.filter((function(t){var a="category"===t.type,n=t.name.toLowerCase().includes(e.toLowerCase()),l=(t.meta.tags||[]).reduce((function(t,a){t=t||a.toLowerCase().includes(e.toLowerCase())}),!1);return(n||l)&&!a}));a.setState({filteredTiles:t,query:e})},a.search,a.explorer=Object(n.createRef)(),a}var a,r,d;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(t,e),a=t,(r=[{key:"componentDidMount",value:function(){this.search.focus(),console.log(this.search)}},{key:"render",value:function(){var e,t,a,n,r,d,m,v,h,g,E,y,b,w,N,A,T,I=this,C=this.state,x=C.isAddModalOpen,S=(C.isAddingCollection,C.activeTile),O=C.activeTileIndex,k=C.filteredTiles,D=l.a.createElement("div",null,l.a.createElement("div",{className:"page-header padded"},l.a.createElement(i.a,{className:"icon",name:s}),l.a.createElement("br",null),l.a.createElement("div",{className:"title"},c)),l.a.createElement("div",{className:"divider horizontal"}),l.a.createElement("div",{className:"padded",style:{padding:"calc(0.5rem - 0.5px)",paddingLeft:"1rem"}},l.a.createElement(o.t,{forwardRef:function(e){return I.search=e},onChange:this.filterTiles})),l.a.createElement("div",{className:"divider horizontal"}),l.a.createElement("div",{className:"auto-scroll-y",style:{height:"calc(100vh - 7rem)"}},k.map((function(e,t){return l.a.createElement("div",{key:t},l.a.createElement("div",{onClick:I.goToTile(t),style:{position:"relative",height:"category"===e.type?"2rem":"3rem",width:"100%",cursor:"pointer",borderTopLeftRadius:"2rem",borderBottomLeftRadius:"2rem",background:t===O?"#ffffff":"transparent",paddingLeft:"category"===e.type?"0.3rem":"initial"},className:"category"!==e.type?"card flex-row":"flex-row"},l.a.createElement("div",{style:{backgroundColor:t===O?"rgba(#00adee, 0.3)":"initial"}},e&&e.meta&&e.meta.iconUrl?l.a.createElement("img",{src:e.meta.iconUrl,style:{height:"auto",width:"2rem",margin:"0.5rem"}}):l.a.createElement(i.a,{className:"icon",name:e.icon})),l.a.createElement("div",{className:"flex-col"},l.a.createElement("div",{style:{marginLeft:"0.3rem",fontSize:"0.9rem",height:"3rem",lineHeight:"3rem"}},l.a.createElement("strong",null,e.name))),!["release"].includes(e.version)&&l.a.createElement("span",{style:{position:"absolute",right:"0.3em",top:"-0.9rem",fontSize:"0.6em"},className:"version-banner ".concat(e.version)})))}))));return l.a.createElement("div",{className:"page"},l.a.createElement(o.o,{rightDiv:l.a.createElement("div",null,l.a.createElement("div",{className:"page-header padded flex-row space-between"},l.a.createElement("div",null,S?l.a.createElement("div",{className:"flex-row"},l.a.createElement("div",{style:{marginRight:"0.5rem"}},l.a.createElement("img",{style:{width:"2rem",height:"2rem"},src:S.meta.iconUrl})),l.a.createElement("div",null,S.name)):l.a.createElement("div",null,"Get Started")),S&&l.a.createElement("div",null,l.a.createElement("button",{className:"primary hollow flex-row",style:{borderRadius:"1rem"},onClick:this.showAddModal}," ",l.a.createElement("div",{style:{marginRight:"0.6em"}},"Add to Library"),l.a.createElement("div",null,l.a.createElement(i.a,{name:"plus-circle"}))," "))),l.a.createElement("div",{className:"divider horizontal"}),S?l.a.createElement("div",null,l.a.createElement("div",{style:{position:"absolute",backgroundColor:S.meta.banner,width:"100%",height:"8rem"}},l.a.createElement("div",{style:{marginTop:"4rem"},className:"flex-row"},l.a.createElement("div",null,l.a.createElement("img",{src:null==S?void 0:null===(e=S.meta)||void 0===e?void 0:e.iconUrl,style:{width:"8rem",height:"8rem",marginLeft:"2rem"}})),l.a.createElement("div",{style:{marginTop:"2rem",marginLeft:"2rem",fontWeight:"bolder",color:"white"}},l.a.createElement("div",null,null==S?void 0:S.description),l.a.createElement("br",null),l.a.createElement("div",{style:{color:"#666"},className:"flex-row flex-wrap"},(S.meta.tags||[]).map((function(e,t){var a;return l.a.createElement("div",{key:t,onClick:function(){return I.filterTiles(e)},style:{backgroundColor:null==S?void 0:null===(a=S.meta)||void 0===a?void 0:a.banner,cursor:"pointer",color:"white",padding:"0.35em",height:"1.5rem",marginRight:"0.25rem",marginBottom:"0.25em",borderRadius:"1rem"}},e)}))),l.a.createElement("br",null),l.a.createElement("pre",{style:{color:null==S?void 0:S.meta.banner}},l.a.createElement("code",null,null==S?void 0:S.type)),l.a.createElement("br",null),(null==S?void 0:S.access)&&l.a.createElement("div",{style:{color:"#333"}},l.a.createElement("a",{href:null==S?void 0:null===(t=S.access)||void 0===t?void 0:t.apiUrl},null==S?void 0:null===(a=S.access)||void 0===a?void 0:a.apiUrl),l.a.createElement("br",null),l.a.createElement("a",{href:null==S?void 0:null===(n=S.access)||void 0===n?void 0:n.apiUrl},"Regsiter")," with the provider.",l.a.createElement("br",null),"Then create your ",l.a.createElement("a",{href:null==S?void 0:null===(r=S.access)||void 0===r?void 0:r.accountUrl},"API credentials"),l.a.createElement("br",null),"And enter them below",l.a.createElement("br",null),(null==S?void 0:S.access)&&(null==S?void 0:S.access.auth)&&[(null==S?void 0:null===(d=S.access)||void 0===d?void 0:null===(m=d.auth)||void 0===m?void 0:m.clientId)&&l.a.createElement("input",{type:"text",placeholder:"CLIENT_ID"}),(null==S?void 0:null===(v=S.access)||void 0===v?void 0:null===(h=v.auth)||void 0===h?void 0:h.clientSecret)&&l.a.createElement("input",{type:"text",placeholder:"CLIENT_SECRET"}),(null==S?void 0:null===(g=S.access)||void 0===g?void 0:null===(E=g.auth)||void 0===E?void 0:E.apiKey)&&l.a.createElement("input",{type:"text",placeholder:"API_KEY",value:null==S?void 0:null===(y=S.access)||void 0===y?void 0:null===(b=y.auth)||void 0===b?void 0:b.clientId}),(null==S?void 0:null===(w=S.access)||void 0===w?void 0:null===(N=w.auth)||void 0===N?void 0:N.apiToken)&&l.a.createElement("input",{type:"text",placeholder:"API_KEY",value:null==S?void 0:null===(A=S.access)||void 0===A?void 0:null===(T=A.auth)||void 0===T?void 0:T.clientId})]))))):l.a.createElement("div",{className:"padded flex-row",style:{position:"absolute",height:"calc(100vh - 6rem - 2px)"}},l.a.createElement("div",{id:"guide"},l.a.createElement("h4",null,"1. Explore Apps"),l.a.createElement("p",{className:"padded"},"Browse the available grid tiles in the store.",l.a.createElement("br",null),"You can type filter, and search by tags."),l.a.createElement("img",{className:"help-gif padded",src:p.a}),l.a.createElement("div",{className:"section-end"}),l.a.createElement("h4",null,"2. Add Apps to Library"),l.a.createElement("p",{className:"padded"},"Once you have found a suitable App, add it to your library.",l.a.createElement("br",null),"While in your library, it is available to all Slideshows you make."),l.a.createElement("img",{className:"help-gif padded",src:f.a}),l.a.createElement("div",{className:"section-end"}),l.a.createElement("h4",null,"3. Use App"),l.a.createElement("p",{className:"padded"},"Time to get started using the App in your Slideshows!",l.a.createElement("br",null),"Check out the Guide on the App's page in the Store"),l.a.createElement("div",{className:"section-end"}),l.a.createElement("h4",null,"Appendix"),l.a.createElement("div",{className:"card-1 padded"},l.a.createElement("h4",null,"App Phases")),l.a.createElement("div",{className:"section-end"})),l.a.createElement(o.i,{headerQuery:"#guide>h4",footerQuery:"#guide>.section-end"}))),leftDiv:D}),l.a.createElement(u.b,{isOpen:x,type:"primary",title:"Add App to Library",onCancel:this.hideAddModal,onSubmit:this.addResource,submitText:"Save",cancelText:"Cancel"},l.a.createElement("div",{className:"flex-column"},l.a.createElement("p",null,'You are about to add the "',S&&S.name,'" App to your library.',l.a.createElement("br",null),l.a.createElement("br",null),"Are you sure?"))))}}])&&g(a.prototype,r),d&&g(a,d),t}(n.Component);t.default=N}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,