(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{1107:function(e,t,n){"use strict";n.r(t),t.default=[{company:"Fuzzy Logic Studio",website:"http://fuzzylogicstudio.io",logo:"https://media-exp1.licdn.com/dms/image/C4E0BAQHqB9qfO9QgOA/company-logo_200_200/0?e=2159024400&v=beta&t=owCnCDvEJtkgegF5lnTqMnemP5Kq2YpfFwxPXSSD_As",summary:"AR/VR applications to solve real-world problems",employeeTitle:"Senior Software Engineer",startDate:new Date,endDate:new Date,stack:["Unity",".NET","Azure"],roles:[{name:"Senior Engineer",duration:(Date.now-new Date("2020/06/15")).toString()}]},{company:"Zappi",website:"https://www.zappi.io/web/",logo:"https://assets.zappi.io/website-api/wp-files/2018/08/02135602/ZappiStore_Logo.png",summary:"The ad and innovation testing platform built by brands for brands.",employeeTitle:"Fullstack Engineer",startDate:new Date("2018/10/30"),endDate:new Date("2020/06/09"),stack:["D3.js","React","Rails","Node","AWS"],roles:[{name:"D3.js Visualization",duration:(Date.now-new Date("2020/06/15")).toString()},{name:"Fullstack Engineer",duration:new Date("2017/08/30")-new Date("2020/06/09")}]},{company:"WhereIsMyTransport",website:"https://www.whereismytransport.com/",logo:"https://res-5.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco/v1472652782/bhbvpzneyrt5hmpi1tzt.png",summary:"Empowering people everywhere to get where they want to go.",employeeTitle:"Fullstack Engineer",startDate:new Date("2013/11/04"),endDate:new Date("2017/08/25"),roles:[{name:"Frontend Engineer",duration:(Date.now-new Date("2020/06/15")).toString(),stack:["React","Angular","Webpack","Azure"]},{name:".NET Engineer",duration:(Date.now-new Date("2020/06/15")).toString(),stack:["C#",".NET","Azure"]},{name:"iOS Engineer (Objective-C)",duration:(Date.now-new Date("2020/06/15")).toString(),stack:["Objective-C","iOS"]}]}]},1115:function(e,t,n){"use strict";n.r(t),n.d(t,"WebRouter",(function(){return v}));var a=n(0),o=n.n(a),r=n(9),i=n(4),c=n.n(i),l=n(5),s=n(45),u=n(472),p=n.n(u);n(473);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function w(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=g(e);if(t){var o=g(this).constructor;n=Reflect.construct(a,arguments,o)}else n=a.apply(this,arguments);return d(this,n)}}function d(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var E=n(1107),h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(i,e);var t,n,a,r=y(i);function i(){var e,t;f(this,i);for(var n=arguments.length,a=new Array(n),o=0;o<n;o++)a[o]=arguments[o];return d(t,(e=t=r.call.apply(r,[this].concat(a)),t.openUrl=function(e){return function(){window.open(e,"_blank")}},e))}return t=i,(n=[{key:"render",value:function(){var e=this;return o.a.createElement("div",{className:"portfolio"},o.a.createElement(s.b,{src:p.a},o.a.createElement("div",{className:"profile"},o.a.createElement("div",{className:"title"},"Tech"),o.a.createElement("img",{src:"https://media-exp1.licdn.com/dms/image/C4E03AQEgRh1THSiRKw/profile-displayphoto-shrink_400_400/0?e=1601510400&v=beta&t=1lILU5SWKpRYtjnhui9WSyt8PnPqnRkxfdQNo8V8qA0"}),o.a.createElement("div",{className:"xflex-col"},o.a.createElement("div",{className:"name"},"Bilo Lwabona"),o.a.createElement("div",{className:"flex-row",style:{height:"1rem",color:"white"}},[{icon:"linkedin",url:"https://www.linkedin.com/in/bilolwabona/"},{icon:"github",url:"http://github.com/bilo-io"},{icon:"twitter",url:""},{icon:"gitlab",url:"https://gitlab.com/bilo.lwabona"},{icon:"stack-overflow",url:"https://stackoverflow.com/users/3795774/bilo-io"},{icon:"unity",url:"https://answers.unity.com/users/84651/bilolwabona.html#84651-activity-block"},{icon:"skype",url:"skype:bilo89za"}].map((function(e,t){return o.a.createElement(c.a,{name:e.icon,key:t,style:{margin:"0.2rem"}})}))))),E.map((function(t,n){return o.a.createElement("div",{className:"experience"},o.a.createElement("div",{className:"flex-row"},o.a.createElement("div",{className:"dates"},t.startDate.getFullYear().toString()," - ",t.endDate.getFullYear().toString()),o.a.createElement("img",{src:t.logo,onClick:e.openUrl(t.website)}),o.a.createElement(l.Tabs,{defaultTab:"EXPERIENCE",tabs:["EXPERIENCE","education","skills","misc","tkd"],EXPERIENCE:o.a.createElement("div",{className:"header"},o.a.createElement("div",{className:"company-name"},t.company),o.a.createElement("div",{className:"employee-title"},t.employeeTitle),o.a.createElement("div",{className:"roles"},t.roles.map((function(e,t){return o.a.createElement("div",{className:"role"},e.name)}))))})))}))))}}])&&w(t.prototype,n),a&&w(t,a),i}(a.Component),v=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(r.b,{exact:!0,path:"".concat("/web"),render:function(){return o.a.createElement(r.a,{to:"".concat("/web")})}}),o.a.createElement(r.b,{exact:!0,path:"".concat("/web","/portfolio"),component:h}))};t.default=v}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwcy93ZWIvcG9ydGZvbGlvL2V4cGVyaWVuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcHMvd2ViL3BvcnRmb2xpby9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwcy93ZWIvcm91dGVyLmpzIl0sIm5hbWVzIjpbImNvbXBhbnkiLCJ3ZWJzaXRlIiwibG9nbyIsInN1bW1hcnkiLCJlbXBsb3llZVRpdGxlIiwic3RhcnREYXRlIiwiRGF0ZSIsImVuZERhdGUiLCJzdGFjayIsInJvbGVzIiwibmFtZSIsImR1cmF0aW9uIiwibm93IiwidG9TdHJpbmciLCJleHBlcmllbmNlcyIsInJlcXVpcmUiLCJQb3J0Zm9saW8iLCJvcGVuVXJsIiwidXJsIiwid2luZG93Iiwib3BlbiIsImNsYXNzTmFtZSIsInNyYyIsInZpZE1hdHRlciIsInN0eWxlIiwiaGVpZ2h0IiwiY29sb3IiLCJpY29uIiwibWFwIiwicHJvZmlsZSIsImkiLCJrZXkiLCJtYXJnaW4iLCJleHBlcmllbmNlIiwiZ2V0RnVsbFllYXIiLCJvbkNsaWNrIiwiZGVmYXVsdFRhYiIsInRhYnMiLCJFWFBFUklFTkNFIiwicm9sZSIsIkNvbXBvbmVudCIsIldlYlJvdXRlciIsImV4YWN0IiwicGF0aCIsInJlbmRlciIsInRvIiwiY29tcG9uZW50Il0sIm1hcHBpbmdzIjoiMkZBQUEsT0FBZSxXQUNYLENBQ0lBLFFBQVMscUJBQ1RDLFFBQVMsNkJBQ1RDLEtBQU0sc0pBQ05DLFFBQVMsa0RBQ1RDLGNBQWUsMkJBQ2ZDLFVBQVcsSUFBSUMsS0FDZkMsUUFBUyxJQUFJRCxLQUNiRSxNQUFPLENBQ0gsUUFDQSxPQUNBLFNBRUpDLE1BQU8sQ0FDSCxDQUNJQyxLQUFNLGtCQUNOQyxVQUFXTCxLQUFLTSxJQUFNLElBQUlOLEtBQUssZUFBZU8sY0FJMUQsQ0FDSWIsUUFBUyxRQUNUQyxRQUFTLDRCQUNUQyxLQUFNLG9GQUNOQyxRQUFTLHFFQUNUQyxjQUFlLHFCQUNmQyxV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TyxjQUE0QkcsVUFBWTlCLE1BSWxEeUIiLCJmaWxlIjoiY2h1bmtzL2FwcC13ZWIuNjNkNWIzOTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBbXG4gICAge1xuICAgICAgICBjb21wYW55OiAnRnV6enkgTG9naWMgU3R1ZGlvJyxcbiAgICAgICAgd2Vic2l0ZTogJ2h0dHA6Ly9mdXp6eWxvZ2ljc3R1ZGlvLmlvJyxcbiAgICAgICAgbG9nbzogJ2h0dHBzOi8vbWVkaWEtZXhwMS5saWNkbi5jb20vZG1zL2ltYWdlL0M0RTBCQVFIcUI5cWZPOVFnT0EvY29tcGFueS1sb2dvXzIwMF8yMDAvMD9lPTIxNTkwMjQ0MDAmdj1iZXRhJnQ9b3dDbkNEdkVKdGtnZWdGNWxuVHFNbmVtUDVLcTJZcGZGd3hQWFNTRF9BcycsXG4gICAgICAgIHN1bW1hcnk6ICdBUi9WUiBhcHBsaWNhdGlvbnMgdG8gc29sdmUgcmVhbC13b3JsZCBwcm9ibGVtcycsXG4gICAgICAgIGVtcGxveWVlVGl0bGU6ICdTZW5pb3IgU29mdHdhcmUgRW5naW5lZXInLFxuICAgICAgICBzdGFydERhdGU6IG5ldyBEYXRlKCksXG4gICAgICAgIGVuZERhdGU6IG5ldyBEYXRlKCksXG4gICAgICAgIHN0YWNrOiBbXG4gICAgICAgICAgICAnVW5pdHknLFxuICAgICAgICAgICAgJy5ORVQnLFxuICAgICAgICAgICAgJ0F6dXJlJ1xuICAgICAgICBdLFxuICAgICAgICByb2xlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdTZW5pb3IgRW5naW5lZXInLFxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAoRGF0ZS5ub3cgLSBuZXcgRGF0ZSgnMjAyMC8wNi8xNScpKS50b1N0cmluZygpXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICAgY29tcGFueTogJ1phcHBpJyxcbiAgICAgICAgd2Vic2l0ZTogJ2h0dHBzOi8vd3d3LnphcHBpLmlvL3dlYi8nLFxuICAgICAgICBsb2dvOiAnaHR0cHM6Ly9hc3NldHMuemFwcGkuaW8vd2Vic2l0ZS1hcGkvd3AtZmlsZXMvMjAxOC8wOC8wMjEzNTYwMi9aYXBwaVN0b3JlX0xvZ28ucG5nJyxcbiAgICAgICAgc3VtbWFyeTogJ1RoZSBhZCBhbmQgaW5ub3ZhdGlvbiB0ZXN0aW5nIHBsYXRmb3JtIGJ1aWx0IGJ5IGJyYW5kcyBmb3IgYnJhbmRzLicsXG4gICAgICAgIGVtcGxveWVlVGl0bGU6ICdGdWxsc3RhY2sgRW5naW5lZXInLFxuICAgICAgICBzdGFydERhdGU6IG5ldyBEYXRlKCcyMDE4LzEwLzMwJyksXG4gICAgICAgIGVuZERhdGU6IG5ldyBEYXRlKCcyMDIwLzA2LzA5JyksXG4gICAgICAgIHN0YWNrOiBbXG4gICAgICAgICAgICAnRDMuanMnLFxuICAgICAgICAgICAgJ1JlYWN0JyxcbiAgICAgICAgICAgICdSYWlscycsXG4gICAgICAgICAgICAnTm9kZScsXG4gICAgICAgICAgICAnQVdTJ1xuICAgICAgICBdLFxuICAgICAgICByb2xlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdEMy5qcyBWaXN1YWxpemF0aW9uJyxcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogKERhdGUubm93IC0gbmV3IERhdGUoJzIwMjAvMDYvMTUnKSkudG9TdHJpbmcoKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAnRnVsbHN0YWNrIEVuZ2luZWVyJyxcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogKG5ldyBEYXRlKCcyMDE3LzA4LzMwJykgLSBuZXcgRGF0ZSgnMjAyMC8wNi8wOScpKVxuICAgICAgICAgICAgfVxuICAgICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGNvbXBhbnk6ICdXaGVyZUlzTXlUcmFuc3BvcnQnLFxuICAgICAgICB3ZWJzaXRlOiAnaHR0cHM6Ly93d3cud2hlcmVpc215dHJhbnNwb3J0LmNvbS8nLFxuICAgICAgICBsb2dvOiAnaHR0cHM6Ly9yZXMtNS5jbG91ZGluYXJ5LmNvbS9jcnVuY2hiYXNlLXByb2R1Y3Rpb24vaW1hZ2UvdXBsb2FkL2NfbHBhZCxmX2F1dG8scV9hdXRvOmVjby92MTQ3MjY1Mjc4Mi9iaGJ2cHpuZXlydDVobXBpMXR6dC5wbmcnLFxuICAgICAgICBzdW1tYXJ5OiAnRW1wb3dlcmluZyBwZW9wbGUgZXZlcnl3aGVyZSB0byBnZXQgd2hlcmUgdGhleSB3YW50IHRvIGdvLicsXG4gICAgICAgIGVtcGxveWVlVGl0bGU6ICdGdWxsc3RhY2sgRW5naW5lZXInLFxuICAgICAgICBzdGFydERhdGU6IG5ldyBEYXRlKCcyMDEzLzExLzA0JyksXG4gICAgICAgIGVuZERhdGU6IG5ldyBEYXRlKCcyMDE3LzA4LzI1JyksXG4gICAgICAgIHJvbGVzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ0Zyb250ZW5kIEVuZ2luZWVyJyxcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogKERhdGUubm93IC0gbmV3IERhdGUoJzIwMjAvMDYvMTUnKSkudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICBzdGFjazogW1xuICAgICAgICAgICAgICAgICAgICAnUmVhY3QnLFxuICAgICAgICAgICAgICAgICAgICAnQW5ndWxhcicsXG4gICAgICAgICAgICAgICAgICAgICdXZWJwYWNrJyxcbiAgICAgICAgICAgICAgICAgICAgJ0F6dXJlJ1xuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJy5ORVQgRW5naW5lZXInLFxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAoRGF0ZS5ub3cgLSBuZXcgRGF0ZSgnMjAyMC8wNi8xNScpKS50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgIHN0YWNrOiBbXG4gICAgICAgICAgICAgICAgICAgICdDIycsXG4gICAgICAgICAgICAgICAgICAgICcuTkVUJyxcbiAgICAgICAgICAgICAgICAgICAgJ0F6dXJlJ1xuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ2lPUyBFbmdpbmVlciAoT2JqZWN0aXZlLUMpJyxcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogKERhdGUubm93IC0gbmV3IERhdGUoJzIwMjAvMDYvMTUnKSkudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICBzdGFjazogW1xuICAgICAgICAgICAgICAgICAgICAnT2JqZWN0aXZlLUMnLFxuICAgICAgICAgICAgICAgICAgICAnaU9TJ1xuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIH1cbl1cbiIsIi8vICNyZWdpb24gTW9kdWxlc1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgRkFJY29uIGZyb20gJ3JlYWN0LWZvbnRhd2Vzb21lJ1xuLy8gI2VuZHJlZ2lvbiBNb2R1bGVcblxuLy8gI3JlZ2lvbiBDb21wb25lbnRzXG5pbXBvcnQgeyBUYWJzIH0gZnJvbSAnY29tcG9uZW50cydcbmltcG9ydCBQYW5lbFZpZGVvIGZyb20gJ2NvbXBvbmVudHMvcGFuZWwvdmlkZW8nXG4vLyAjZW5kcmVnaW9uXG5cbi8vICNyZWdpb24gQXNzZXRzICYgRGF0YVxuaW1wb3J0IHZpZE1hdHRlciBmcm9tICdpbWcvaG9tZS92aXNpb25fbWF0dGVyLm1wNCdcbmltcG9ydCB2aWRNYXR0ZXIyIGZyb20gJ2ltZy9ob21lL3Zpc2lvbl9tYXR0ZXJfMi5tcDQnXG5jb25zdCBleHBlcmllbmNlcyA9IHJlcXVpcmUoJy4vZXhwZXJpZW5jZScpXG5jb25zdCBwcm9maWxlUGljID0gJ2h0dHBzOi8vbWVkaWEtZXhwMS5saWNkbi5jb20vZG1zL2ltYWdlL0M0RTAzQVFFZ1JoMVRIU2lSS3cvcHJvZmlsZS1kaXNwbGF5cGhvdG8tc2hyaW5rXzQwMF80MDAvMD9lPTE2MDE1MTA0MDAmdj1iZXRhJnQ9MWxJTFU1U1dLcFJZdGpuaHVpOVdTeXQ4UG5QcW5Sa3hmZFFObzhWOHFBMCdcbi8vICNlbmRyZWdpb25cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9ydGZvbGlvIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBvcGVuVXJsID0gKHVybCkgPT4gKCkgPT4ge1xuICAgICAgICB3aW5kb3cub3Blbih1cmwsICdfYmxhbmsnKVxuICAgIH1cblxuICAgIHJlbmRlciAoKSB7XG4gICAgICAgIGNvbnN0IHNvY2lhbFByb2ZpbGVzID0gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGljb246ICdsaW5rZWRpbicsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2JpbG9sd2Fib25hLydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWNvbjogJ2dpdGh1YicsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cDovL2dpdGh1Yi5jb20vYmlsby1pbydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWNvbjogJ3R3aXR0ZXInLFxuICAgICAgICAgICAgICAgIHVybDogJydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWNvbjogJ2dpdGxhYicsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9naXRsYWIuY29tL2JpbG8ubHdhYm9uYSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWNvbjogJ3N0YWNrLW92ZXJmbG93JyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3VzZXJzLzM3OTU3NzQvYmlsby1pbydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWNvbjogJ3VuaXR5JyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL2Fuc3dlcnMudW5pdHkuY29tL3VzZXJzLzg0NjUxL2JpbG9sd2Fib25hLmh0bWwjODQ2NTEtYWN0aXZpdHktYmxvY2snXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGljb246ICdza3lwZScsXG4gICAgICAgICAgICAgICAgdXJsOiAnc2t5cGU6Ymlsbzg5emEnXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3BvcnRmb2xpbyc+XG4gICAgICAgICAgICAgICAgPFBhbmVsVmlkZW8gc3JjPXsgdmlkTWF0dGVyIH0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdwcm9maWxlJz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0aXRsZSc+VGVjaDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9eyBwcm9maWxlUGljIH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd4ZmxleC1jb2wnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSduYW1lJz5CaWxvIEx3YWJvbmE8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleC1yb3cnIHN0eWxlPXt7IGhlaWdodDogJzFyZW0nLCBjb2xvcjogJ3doaXRlJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc29jaWFsUHJvZmlsZXMubWFwKChwcm9maWxlLCBpKSA9PiA8RkFJY29uIG5hbWU9eyBwcm9maWxlLmljb24gfSBrZXk9eyBpIH0gc3R5bGU9e3sgbWFyZ2luOiAnMC4ycmVtJyB9fSAvPilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBleHBlcmllbmNlcy5tYXAoKGV4cGVyaWVuY2UsIGkpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZXhwZXJpZW5jZSc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4LXJvdyc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZGF0ZXMnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgZXhwZXJpZW5jZS5zdGFydERhdGUuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpIH0gLSB7IGV4cGVyaWVuY2UuZW5kRGF0ZS5nZXRGdWxsWWVhcigpLnRvU3RyaW5nKCkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17IGV4cGVyaWVuY2UubG9nbyB9IG9uQ2xpY2s9eyB0aGlzLm9wZW5VcmwoZXhwZXJpZW5jZS53ZWJzaXRlKSB9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUYWJzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFRhYj0nRVhQRVJJRU5DRSdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWJzPXtbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdFWFBFUklFTkNFJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2VkdWNhdGlvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdza2lsbHMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbWlzYycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0a2QnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFWFBFUklFTkNFPXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2hlYWRlcic+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY29tcGFueS1uYW1lJz57IGV4cGVyaWVuY2UuY29tcGFueSB9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZW1wbG95ZWUtdGl0bGUnPnsgZXhwZXJpZW5jZS5lbXBsb3llZVRpdGxlIH08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdyb2xlcyc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHBlcmllbmNlLnJvbGVzLm1hcCgocm9sZSwgaSkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3JvbGUnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgcm9sZS5uYW1lIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDwvUGFuZWxWaWRlbz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuIiwiLy8gI3JlZ2lvbiBNb2R1bGVzXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuaW1wb3J0IHsgUm91dGUsIFJlZGlyZWN0IH0gZnJvbSAncmVhY3Qtcm91dGVyJ1xuLy8gI2VuZHJlZ2lvblxuXG4vLyAjcmVnaW9uIFBhZ2VzXG5pbXBvcnQgUG9ydGZvbGlvIGZyb20gJy4vcG9ydGZvbGlvJ1xuLy8gI2VuZHJlZ2lvblxuXG5jb25zdCBzY29wZVJvb3QgPSAnL3dlYidcblxuZXhwb3J0IGNvbnN0IFdlYlJvdXRlciA9ICgpID0+IChcbiAgICA8PlxuICAgICAgICA8Um91dGUgZXhhY3RcbiAgICAgICAgICAgIHBhdGg9e2Ake3Njb3BlUm9vdH1gfVxuICAgICAgICAgICAgcmVuZGVyPXtcbiAgICAgICAgICAgICAgICAoKSA9PiA8UmVkaXJlY3QgdG89e2Ake3Njb3BlUm9vdH1gfSAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAvPlxuICAgICAgICA8Um91dGUgZXhhY3QgcGF0aD17YCR7c2NvcGVSb290fS9wb3J0Zm9saW9gfSBjb21wb25lbnQ9eyBQb3J0Zm9saW8gfSAvPlxuICAgIDwvPlxuKVxuXG5leHBvcnQgZGVmYXVsdCBXZWJSb3V0ZXJcbiJdLCJzb3VyY2VSb290IjoiIn0=