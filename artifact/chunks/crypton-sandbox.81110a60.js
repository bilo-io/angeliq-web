(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{1120:function(t,e,n){"use strict";n.r(e),n.d(e,"CryptonSandbox",(function(){return v}));var a=n(0),o=n.n(a),r=(n(6),n(67),n(35),n(9)),c=(n(1144),n(240),n(172)),i=n(1145),l=n(1150);function s(t){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function d(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?u(Object(n),!0).forEach((function(e){f(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function f(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function p(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function y(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}function b(t,e){return!e||"object"!==s(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function g(t){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function h(t,e){return(h=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var v=function(t){function e(){var t,n,a;p(this,e);for(var o=arguments.length,r=new Array(o),i=0;i<o;i++)r[i]=arguments[i];return b(a,(n=a=b(this,(t=g(e)).call.apply(t,[this].concat(r))),a.state={isLoading:{ipAddress:!0,countryForIP:!0,cryptoInfo:!0,cryptoIndex:!0,chartData:!0,cryptoCoins:!0},data:{}},a.setChartType=function(t){a.setState({chartType:t.target.value})},a.fetchLocationInfo=function(){Object(c.b)().then((function(t){var e=t.ip;a.setState({data:d({},a.state.data,{ipAddress:e})}),Object(c.a)(e).then((function(t){console.log(t),a.setState({data:d({},a.state.data,{country:t,currency:Object(l.a)(null==t?void 0:t.countryCode)})})})).catch((function(t){console.log(t)})).finally((function(){a.setState({isLoading:d({},a.state.isLoading,{countryForIP:!1})})}))})).catch((function(t){console.log(t)})).finally((function(){a.setState({isLoading:d({},a.state.isLoading,{ipAddress:!1})})}))},a.onChange=function(t){},n))}var n,a,s;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&h(t,e)}(e,t),n=e,(a=[{key:"componentDidMount",value:function(){this.fetchLocationInfo(),this.fetchCryptoInfo()}},{key:"fetchCryptoInfo",value:function(){var t=this;Object(i.d)().then((function(e){t.setState({data:d({},t.state.data,{cryptoExchanges:e})})})).finally((function(){t.setState({isLoading:d({},t.state.isLoading,{cryptoExchanges:!1})})})),Object(i.e)().then((function(e){t.setState({data:d({},t.state.data,{cryptoGlobal:e})})})).finally((function(){t.setState({isLoading:d({},t.state.isLoading,{cryptoGlobal:!1})})})),Object(i.f)().then((function(e){t.setState({data:d({},t.state.data,{cryptoTrending:e})})})).finally((function(){t.setState({isLoading:d({},t.state.isLoading,{cryptoTrending:!1})})})),Object(i.c)().then((function(e){t.setState({data:d({},t.state.data,{cryptoExchangeRates:e})})})).finally((function(){t.setState({isLoading:d({},t.state.isLoading,{cryptoExchangeRates:!1})})})),Object(i.a)({id:"bitcoin",currency:"usd",days:7}).then((function(e){t.setState({data:d({},t.state.data,{chartData:e})})})).finally((function(){t.setState({isLoading:d({},t.state.isLoading,{chartData:!1})})}))}},{key:"render",value:function(){var t,e,n,a,c,i,l,s=this.state,u=s.isLoading,f=s.data,p=f&&(null===(t=f.cryptoExchangeRates)||void 0===t?void 0:t.rates)?Object.keys(null==f?void 0:f.cryptoExchangeRates.rates):[],y=p.map((function(t){return d({id:t,key:t},null==f?void 0:f.cryptoExchangeRates.rates[t])})),b=f.currency;return console.log({keys:p,items:y}),(null==f?void 0:null===(e=f.chartData)||void 0===e?void 0:null===(n=e.prices)||void 0===n?void 0:n.length)>0&&f.chartData.prices.map((function(t){return[new Date(t[0]),t[1]]})),null==f||null===(a=f.chartData)||void 0===a||a.prices,o.a.createElement("div",{className:"page"},o.a.createElement("div",null,o.a.createElement("h1",null,"Crypton Sandbox"),o.a.createElement(r.c,{isLoading:u.ipAddress},o.a.createElement("div",{className:"card card-1 flex-row space-between",style:{padding:"1rem",borderRadius:"6px",border:"1px solid rgba(grey, 0.5)"}},o.a.createElement("div",null,"IP: ",o.a.createElement("strong",null,f.ipAddress)),o.a.createElement(r.c,{isLoading:u.country},o.a.createElement("div",{className:"flex-row space-between"},o.a.createElement("div",null,null===(c=f.country)||void 0===c?void 0:c.countryName),o.a.createElement("div",null,"(",null===(i=f.country)||void 0===i?void 0:i.countryCode,")"),o.a.createElement("div",null,b),o.a.createElement("div",null,null===(l=f.country)||void 0===l?void 0:l.countryEmoji))))),o.a.createElement(r.c,{isLoading:u.cryptoExchanges},o.a.createElement("div",null,"CryptoExchanges: ",o.a.createElement("strong",null,o.a.createElement("pre",null))),o.a.createElement("div",{className:"flex-row flex-wrap"},!1))))}}])&&y(n.prototype,a),s&&y(n,s),e}(a.Component);e.default=v}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY2h1bmtzL2NyeXB0b24tc2FuZGJveC44MTExMGE2MC43LmpzIl0sIm5hbWVzIjpbIndpbmRvdyIsInB1c2giLCIxMTIwIiwibW9kdWxlIiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJyIiwiZCIsIkNyeXB0b25TYW5kYm94IiwicmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsInJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdCIsIm4iLCJjb21wb25lbnRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18iLCJ1dGlsX2FwaXNfaXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXyIsInV0aWxfYXBpc19jcnlwdG9fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXyIsIl91dGlsX2N1cnJlbmNpZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfXyIsIl90eXBlb2YiLCJvYmoiLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwib3duS2V5cyIsIm9iamVjdCIsImVudW1lcmFibGVPbmx5Iiwia2V5cyIsIk9iamVjdCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInN5bWJvbHMiLCJmaWx0ZXIiLCJzeW0iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImZvckVhY2giLCJrZXkiLCJfZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfZGVmaW5lUHJvcGVydGllcyIsInByb3BzIiwiZGVzY3JpcHRvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic2VsZiIsImNhbGwiLCJSZWZlcmVuY2VFcnJvciIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJfZ2V0UHJvdG90eXBlT2YiLCJvIiwic2V0UHJvdG90eXBlT2YiLCJnZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9zZXRQcm90b3R5cGVPZiIsInAiLCJfQ29tcG9uZW50IiwiX2dldFByb3RvdHlwZU9mMiIsIl90ZW1wIiwiX3RoaXMiLCJ0aGlzIiwiX2xlbiIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJjb25jYXQiLCJzdGF0ZSIsImlzTG9hZGluZyIsImlwQWRkcmVzcyIsImNvdW50cnlGb3JJUCIsImNyeXB0b0luZm8iLCJjcnlwdG9JbmRleCIsImNoYXJ0RGF0YSIsImNyeXB0b0NvaW5zIiwiZGF0YSIsInNldENoYXJ0VHlwZSIsImUiLCJzZXRTdGF0ZSIsImNoYXJ0VHlwZSIsImZldGNoTG9jYXRpb25JbmZvIiwidGhlbiIsInJlc3BvbnNlIiwiaXAiLCJjb25zb2xlIiwibG9nIiwiY291bnRyeSIsImN1cnJlbmN5IiwiY291bnRyeUNvZGUiLCJjYXRjaCIsImVycm9yIiwiZmluYWxseSIsIm9uQ2hhbmdlIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwiX2luaGVyaXRzIiwiZmV0Y2hDcnlwdG9JbmZvIiwiX3RoaXMyIiwiY3J5cHRvRXhjaGFuZ2VzIiwiY3J5cHRvR2xvYmFsIiwiY3J5cHRvVHJlbmRpbmciLCJjcnlwdG9FeGNoYW5nZVJhdGVzIiwiaWQiLCJkYXlzIiwiX2RhdGEkY3J5cHRvRXhjaGFuZ2VSIiwiX2RhdGEkY2hhcnREYXRhIiwiX2RhdGEkY2hhcnREYXRhJHByaWNlIiwiX2RhdGEkY2hhcnREYXRhMiIsIl9kYXRhJGNvdW50cnkiLCJfZGF0YSRjb3VudHJ5MiIsIl9kYXRhJGNvdW50cnkzIiwiX3RoaXMkc3RhdGUiLCJyYXRlcyIsIml0ZW1zIiwibWFwIiwicHJpY2VzIiwiZGF0YVBvaW50IiwiRGF0ZSIsImEiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwic3R5bGUiLCJwYWRkaW5nIiwiYm9yZGVyUmFkaXVzIiwiYm9yZGVyIiwiY291bnRyeU5hbWUiLCJjb3VudHJ5RW1vamkiXSwibWFwcGluZ3MiOiJDQUFDQSxPQUFxQixhQUFJQSxPQUFxQixjQUFLLElBQUlDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FFNURDLEtBQ0EsU0FBVUMsRUFBUUMsRUFBcUJDLEdBRTdDLGFBQ0FBLEVBQW9CQyxFQUFFRixHQUNTQyxFQUFvQkUsRUFBRUgsRUFBcUIsa0JBQWtCLFdBQWEsT0FBT0ksS0FDM0YsSUFBSUMsRUFBcUNKLEVBQW9CLEdBQ3pESyxFQUEwREwsRUFBb0JNLEVBQUVGLEdBS2hGRyxHQUppRFAsRUFBb0IsR0FFMUJBLEVBQW9CLElBQzFCQSxFQUFvQixJQUNmQSxFQUFvQixJQUc5RFEsR0FGc0NSLEVBQW9CLE1BQ1RBLEVBQW9CLEtBQ3pCQSxFQUFvQixNQUNoRVMsRUFBZ0RULEVBQW9CLE1BQ3BFVSxFQUFnRFYsRUFBb0IsTUFDN0YsU0FBU1csRUFBUUMsR0FBbVYsT0FBdE9ELEVBQXJELG1CQUFYRSxRQUFvRCxpQkFBcEJBLE9BQU9DLFNBQW1DLFNBQWlCRixHQUFPLGNBQWNBLEdBQTJCLFNBQWlCQSxHQUFPLE9BQU9BLEdBQXlCLG1CQUFYQyxRQUF5QkQsRUFBSUcsY0FBZ0JGLFFBQVVELElBQVFDLE9BQU9HLFVBQVksZ0JBQWtCSixJQUF5QkEsR0FFblgsU0FBU0ssRUFBUUMsRUFBUUMsR0FBa0IsSUFBSUMsRUFBT0MsT0FBT0QsS0FBS0YsR0FBUyxHQUFJRyxPQUFPQyxzQkFBdUIsQ0FBRSxJQUFJQyxFQUFVRixPQUFPQyxzQkFBc0JKLEdBQWFDLElBQWdCSSxFQUFVQSxFQUFRQyxRQUFPLFNBQVVDLEdBQU8sT0FBT0osT0FBT0sseUJBQXlCUixF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Q2pVLE1BQU8sQ0FBQyxJQUFJQyxLQUFLRCxFQUFVLElBQUtBLEVBQVUsT0FHcEM1QyxTQUFvRixRQUF2Q21DLEVBQW1CbkMsRUFBS0YsaUJBQTRDLElBQXJCcUMsR0FBdUNBLEVBQWlCUSxPQUdySnZILEVBQTJDMEgsRUFBRUMsY0FBYyxNQUFPLENBQ3ZFQyxVQUFXLFFBQ1Y1SCxFQUEyQzBILEVBQUVDLGNBQWMsTUFBTyxLQUFNM0gsRUFBMkMwSCxFQUFFQyxjQUFjLEtBQU0sS0FBTSxtQkFBb0IzSCxFQUEyQzBILEVBQUVDLGNBQWN6SCxFQUF1RCxFQUFHLENBQ3pSbUUsVUFBV0EsRUFBVUMsV0FDcEJ0RSxFQUEyQzBILEVBQUVDLGNBQWMsTUFBTyxDQUNuRUMsVUFBVyxxQ0FDWEMsTUFBTyxDQUNMQyxRQUFTLE9BQ1RDLGFBQWMsTUFDZEMsT0FBUSw4QkFFVGhJLEVBQTJDMEgsRUFBRUMsY0FBYyxNQUFPLEtBQU0sT0FBUTNILEVBQTJDMEgsRUFBRUMsY0FBYyxTQUFVLEtBQU0vQyxFQUFLTixZQUFhdEUsRUFBMkMwSCxFQUFFQyxjQUFjekgsRUFBdUQsRUFBRyxDQUNuU21FLFVBQVdBLEVBQVVrQixTQUNwQnZGLEVBQTJDMEgsRUFBRUMsY0FBYyxNQUFPLENBQ25FQyxVQUFXLDBCQUNWNUgsRUFBMkMwSCxFQUFFQyxjQUFjLE1BQU8sS0FBeUMsUUFBbENYLEVBQWdCcEMsRUFBS1csZUFBdUMsSUFBbEJ5QixPQUEyQixFQUFTQSxFQUFjaUIsYUFBY2pJLEVBQTJDMEgsRUFBRUMsY0FBYyxNQUFPLEtBQU0sSUFBeUMsUUFBbkNWLEVBQWlCckMsRUFBS1csZUFBd0MsSUFBbkIwQixPQUE0QixFQUFTQSxFQUFleEIsWUFBYSxLQUFNekYsRUFBMkMwSCxFQUFFQyxjQUFjLE1BQU8sS0FBTW5DLEdBQVd4RixFQUEyQzBILEVBQUVDLGNBQWMsTUFBTyxLQUEwQyxRQUFuQ1QsRUFBaUJ0QyxFQUFLVyxlQUF3QyxJQUFuQjJCLE9BQTRCLEVBQVNBLEVBQWVnQixrQkFBbUJsSSxFQUEyQzBILEVBQUVDLGNBQWN6SCxFQUF1RCxFQUFHLENBQ3Z2Qm1FLFVBQVdBLEVBQVVpQyxpQkFDcEJ0RyxFQUEyQzBILEVBQUVDLGNBQWMsTUFBTyxLQUFNLG9CQUFxQjNILEVBQTJDMEgsRUFBRUMsY0FBYyxTQUFVLEtBQU0zSCxFQUEyQzBILEVBQUVDLGNBQWMsTUFBTyxRQUFTM0gsRUFBMkMwSCxFQUFFQyxjQUFjLE1BQU8sQ0FDdFRDLFVBQVcsdUJBQ1QsV0ExT29FakYsRUFBa0JGLEVBQVk5QixVQUFXbUYsR0FBaUJDLEdBQWFwRCxFQUFrQkYsRUFBYXNELEdBOE8zS2pHLEVBdk1ULENBd01FQyxFQUE4QyxXQUNuQkwsRUFBNkIsUUFBSSIsImZpbGUiOiJjaHVua3MvY3J5cHRvbi1zYW5kYm94LjgxMTEwYTYwLmpzIiwic291cmNlUm9vdCI6IiJ9