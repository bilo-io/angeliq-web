(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{1098:function(e,t,n){"use strict";n.r(t),n.d(t,"CoursesExplorer",(function(){return u})),n.d(t,"CourseCard",(function(){return m}));var a=n(0),r=n.n(a),c=n(5),o=(n(6),n(245)),l=n(9),i=n(1146);function s(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var n=[],a=!0,r=!1,c=void 0;try{for(var o,l=e[Symbol.iterator]();!(a=(o=l.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,c=e}finally{try{a||null==l.return||l.return()}finally{if(r)throw c}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var u=function(e){var t=s(Object(a.useState)(!0),2),n=t[0],c=t[1],u=s(Object(a.useState)([]),2),d=u[0],f=u[1],p=s(Object(a.useState)([]),2),v=p[0],b=p[1],E=s(Object(a.useState)(""),2),g=E[0],h=E[1];Object(a.useEffect)((function(){i.a.getCourses().then((function(e){console.log(e.data),c(!1),f(e.data)})),y("")}),[]);var y=function(e){var t=d.filter((function(t){return t.name.toLowerCase().includes(e.toLowerCase())}));h(e),b(t)},w=function(t,n){return function(){console.log("<CoursesExplorer/>.openCourse: ",t),e.history.push("".concat(o.scopeRoot,"/courses/").concat(n))}};return r.a.createElement("div",{className:"page"},r.a.createElement("div",{className:"margined"},r.a.createElement("br",null),r.a.createElement(l.s,{onChange:function(e){console.log("Course Search ",e.target.value),y(e.target.value)}}),r.a.createElement("br",null),!n&&r.a.createElement("div",{className:"category-picker"},[{label:"All"},{label:"Science"},{label:"Programming"},{label:"Design"}].map((function(e,t){return r.a.createElement("div",{key:t,className:"item"},e.label)}))),n?r.a.createElement("div",{className:"loader"}):r.a.createElement("div",{className:"flex-row flex-wrap"},(0===g.length?d:v).map((function(e,t){return r.a.createElement(m,{key:t,course:e,index:t,onClick:w(e,t)})})))))},m=function(e){var t=e.course,n=e.onClick;return r.a.createElement("div",{className:"course-card",onClick:n},r.a.createElement("img",{src:t.thumbnail}),r.a.createElement("div",{className:"title"},t.name),r.a.createElement("div",{className:"content"},t.description),r.a.createElement("div",{className:"flex-row space-between padded",style:{position:"absolute",bottom:"0rem"}},r.a.createElement("div",null,t.difficulty),r.a.createElement("div",null,t.duration,"min")))};t.default=Object(c.g)(u)},1146:function(e,t,n){"use strict";var a=n(25),r=n.n(a);t.a={getCourses:function(){return r()({method:"GET",url:"".concat("http://localhost:3020/api","/schools/courses")})}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,