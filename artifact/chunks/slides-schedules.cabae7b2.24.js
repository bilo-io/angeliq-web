(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{1129:function(e,t,n){"use strict";n.r(t),n.d(t,"Schedules",(function(){return P}));var a=n(0),r=n.n(a),c=n(242),o=n(6),l=n.n(o),i=n(67),s=n(35),u=(n(108),n(1128)),d=(n(1155),n(2)),m=n.n(d),p=n(241),f=n(9),h=n(1141);n(83);function v(e,t,n,a,r,c,o){try{var l=e[c](o),i=l.value}catch(e){return void n(e)}l.done?t(i):Promise.resolve(i).then(a,r)}function E(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var c=e.apply(t,n);function o(e){v(c,a,r,o,l,"next",e)}function l(e){v(c,a,r,o,l,"throw",e)}o(void 0)}))}}var g=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)};g.findSchedules=function(){var e=E(regeneratorRuntime.mark((function e(t){var n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.id,a=t.query,e.next=3,h.a.GETResource({appName:"slides",resource:"schedules",id:n,query:a});case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),g.createSchedule=function(){var e=E(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h.a.POSTResource({appName:"slides",resource:"schedules",data:t});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),g.updateSchedule=function(){var e=E(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h.a.PATCHResource({appName:"slides",resource:"schedules",id:t,data:n});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),g.deleteSchedule=function(){var e=E(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h.a.DELETEResource({appName:"slides",resource:"schedules",id:t});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();var b=g,y=n(82),w=(n(1140),"Schedules"),S="calendar",O=(n(240),n(1156)),N=n.n(O),j=n(1157),x=n.n(j),R=n(1158),C=n.n(R);n(1159);function D(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function A(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?D(Object(n),!0).forEach((function(t){T(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):D(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function T(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function k(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var n=[],a=!0,r=!1,c=void 0;try{for(var o,l=e[Symbol.iterator]();!(a=(o=l.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,c=e}finally{try{a||null==l.return||l.return()}finally{if(r)throw c}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var I=u.a.momentLocalizer(m.a),P=function(e){var t=k(Object(a.useState)(null),2),n=t[0],o=t[1],i=k(Object(a.useState)(""),2),s=i[0],d=i[1],v=k(Object(a.useState)([]),2),E=v[0],g=v[1],y=k(Object(a.useState)([]),2),O=y[0],j=(y[1],k(Object(a.useState)([]),2)),R=(j[0],j[1],k(Object(a.useState)(!0),2)),D=R[0],T=R[1],P=k(Object(a.useState)(!0),2),U=P[0],L=P[1],_=k(Object(a.useState)(!0),2),F=_[0],G=_[1],z=k(Object(a.useState)(0),2),M=(z[0],z[1]),Y=k(Object(a.useState)(""),2),H=(Y[0],Y[1]),Q=k(Object(a.useState)(null),2),q=Q[0],J=Q[1],K=k(Object(a.useState)(!1),2),V=K[0],W=K[1],B=k(Object(a.useState)("week"),2),X=B[0],Z=B[1],$=k(Object(a.useState)(!1),2),ee=$[0],te=$[1],ne=k(Object(a.useState)([]),2),ae=ne[0],re=(ne[1],k(Object(a.useState)(null),2)),ce=re[0],oe=re[1],le=k(Object(a.useState)(m()()),2),ie=(le[0],le[1],k(Object(a.useState)(m()()),2)),se=(ie[0],ie[1],Object(a.useRef)(null));Object(a.useEffect)((function(){de()}),[]);var ue=function(e){return function(){W(!0),J(e)}},de=function(){T(!0),b.findSchedules({}).then((function(e){var t=e.data.map((function(e){return A({},e,{id:e._id})}));g(t),T(!1)})).catch(h.a.handleError(e.addToast))},me=function(e,t){return function(){G(t.id),M(e)}},pe=function(e){console.log("showEventModal: ",e),te(!0),oe(e)},fe=function(){return te(!1)},he=function(){ce.id,fe()};return r.a.createElement("div",{className:"page"},r.a.createElement(f.o,{isRightDark:void 0===n,leftDiv:r.a.createElement("div",null,r.a.createElement("div",{className:"page-header padded flex-row space-between"},r.a.createElement("div",{className:"flex-row auto-scroll-x"},r.a.createElement(l.a,{className:"icon",name:S}),r.a.createElement("br",null),r.a.createElement("div",{className:"title"},w)),r.a.createElement("div",null,r.a.createElement("button",{className:"primary hollow action-button",onClick:function(){L(!1),ue("create")()}},r.a.createElement("div",{className:"icon"},r.a.createElement(l.a,{name:"plus-circle"}))))),r.a.createElement("div",{className:"divider horizontal"}),r.a.createElement(f.l,{ref:se,showPath:!0,rootPath:"schedules/",name:"Schedules",resources:E,collections:O,resourceIcon:S,onClickItem:function(e){o(e),console.log(e)},isLoading:D})),rightDiv:r.a.createElement("div",null,r.a.createElement("div",{className:"page-header padded"},n?r.a.createElement("div",{className:"full-width flex-row space-between"},r.a.createElement(f.j,{value:n.name,onChange:function(){}}),r.a.createElement("div",null,r.a.createElement(f.b,{onSave:ue("save"),onRemove:ue("remove"),onClose:ue("close")}))):r.a.createElement("div",null,"Get Started")),r.a.createElement("div",{className:"divider horizontal"}),n?r.a.createElement("div",{className:"react-calendar-container auto-scroll-y",style:{position:"relative",height:"calc(100vh - 3rem)"}},r.a.createElement(u.a.ControlledComponent,{selectable:!0,localizer:I,events:ae,startAccessor:"start",endAccessor:"end",timeslots:8,view:X,defaultDate:new Date(2015,3,12),onView:Z,onNavigate:function(e){return console.log(e)},onSelectEvent:pe,onSelectSlot:function(e){console.log("handleSelectEvent: ",{event:e});var t=e.start,n=e.end;pe({title:"New Event",start:t,end:n})}})):r.a.createElement("div",{className:"padded  flex-row",style:{position:"relative",height:"calc(100vh - 6rem)"}},r.a.createElement("div",{id:"guide"},r.a.createElement("h4",null,"1. Add a Schedule"),r.a.createElement("p",null,"Schedules allow you to play specific ",r.a.createElement(c.b,{to:"/slides/slides/"},"Slideshows")," at certain times",r.a.createElement("br",null),"Create a new schedule to start the process."),r.a.createElement("img",{src:N.a,className:"help-gif"}),r.a.createElement("div",{className:"section-end"}),r.a.createElement("h4",null,"2. Add an Event"),r.a.createElement("p",null,"Click on a Schedule in your Explorer to open its calendar.",r.a.createElement("br",null),"Drag and drop on a timeslot to create an entry.",r.a.createElement("br",null),"You can always go back to editing an event by clicking on it",r.a.createElement("br",null),'Lastly, assign the desired Slideshow to the event and hit "OK".'),r.a.createElement("img",{src:x.a,className:"help-gif"}),r.a.createElement("div",{className:"section-end"}),r.a.createElement("h4",null,"3. Managing Schedules"),r.a.createElement("p",null,"After you've made the desired changes, ",r.a.createElement("span",{className:"colors success",style:{background:"transparent"}},"Save ",r.a.createElement(l.a,{name:"check-circle"}))," your Schedule.",r.a.createElement("br",null),"You can also ",r.a.createElement("span",{className:"colors warning",style:{background:"transparent"}},"Cancel ",r.a.createElement(l.a,{name:"minus-circle"}))," any changes, to close the current Schedule.",r.a.createElement("br",null),"To irretrievably ",r.a.createElement("span",{className:"colors error",style:{background:"transparent"}},"Delete ",r.a.createElement(l.a,{name:"times-circle"}))," the Schedule, you confirm by typing out the name.",r.a.createElement("br",null),"After saving it, you can assign Schedules to ",r.a.createElement(c.b,{to:"vision-viz/screens"},"Screens"),"."),r.a.createElement("img",{src:C.a,className:"help-gif"}),r.a.createElement("div",{className:"section-end"})),r.a.createElement(f.i,{headerQuery:"#guide>h4",footerQuery:"#guide>.section-end"})))}),r.a.createElement(p.a,{isOpen:V,activeModal:q,resourceName:"Schedule",onCancel:function(){W(!1),J(null)},onAction:{save:function(){b.updateSchedule(n.id).then((function(t){de(),e.addToast({type:"success",content:r.a.createElement("div",null,"Schedule was successfully saved")})})).catch(h.a.handleError(e.addToast))},remove:function(){b.deleteSchedule(n.id).then((function(t){console.log("Modal: cancel warning ",n),o(void 0),se.current.deselect(),de(),e.addToast({type:"success",content:r.a.createElement("div",null,"Schedule was successfully deleted")})})).catch(h.a.handleError(e.addToast))},create:function(){var t={name:s,events:[]};F&&(t.collectionId=F),b.createSchedule(t).then((function(t){de(),e.addToast({type:"success",content:r.a.createElement("div",null,"Schedule was successfully created")})})).catch(h.a.handleError(e.addToast))}},views:{save:r.a.createElement("div",null,r.a.createElement("div",null,"Saving will override the existing Schedule."),r.a.createElement("br",null),r.a.createElement("div",null,"Are you sure?")),close:r.a.createElement("div",null,r.a.createElement("div",null,"Leaving now will discard all unsaved changes!"),r.a.createElement("br",null),r.a.createElement("div",null,"Are you sure you want to leave the Schedule?")),remove:r.a.createElement("div",null,r.a.createElement("div",null,"Deleting this Schedule cannot be undone!"),r.a.createElement("br",null),r.a.createElement("div",null,"Are you sure?")),create:r.a.createElement("div",{className:"flex-column"},r.a.createElement("input",{type:"text",onChange:function(e){d(e.target.value)},className:"full-width-padded",placeholder:"Schedule's name..."}),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("label",null,r.a.createElement("input",{type:"checkbox",checked:U,onChange:function(){return L(!U)}}),r.a.createElement("span",null,"Add to a ",r.a.createElement("strong",null," ",r.a.createElement(l.a,{name:"folder"}),"  Collection"))),U&&r.a.createElement("div",{style:{marginTop:"1rem"}},r.a.createElement("input",{type:"text",onChange:function(e){H(e.target.value)},className:"full-width-padded",placeholder:"Collection's name..."}),r.a.createElement("br",null),r.a.createElement("br",null),"OR select a collection:",r.a.createElement("br",null),r.a.createElement("br",null),U&&r.a.createElement("div",null,O.map((function(e,t){return r.a.createElement("label",{key:t,className:"sidebar-collection",style:{color:"".concat(F===e.id?"#00adee":"initial")},onClick:me(t,e)},"  ",r.a.createElement(l.a,{name:"folder"}),"  ",e.name)})))))}}),r.a.createElement(f.h,{isOpen:ee,type:"primary",title:"Edit Event",onCancel:fe,onSubmit:function(){he()},submitText:"Update Event",cancelText:"Cancel"},r.a.createElement("div",null,r.a.createElement("div",null,"Event Name"),r.a.createElement("input",{type:"text"}),r.a.createElement("br",null),r.a.createElement("div",null,"Start"),r.a.createElement("input",{type:"number"}),r.a.createElement("div",null,"End"),r.a.createElement("input",{type:"number"}))))};t.default=Object(i.b)((function(e){return{schedules:e.session.schedules,schedule:e.session.schedule}}),(function(e){return Object(s.b)({addToast:y.a,setVideoModal:y.d},e)}))(P)},1140:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var a=n(1093);n(1094),n(1095),n(1096);a.initializeApp({apiKey:"AIzaSyC-jjX9f71GjxEy-potKYFaQJg8kAsY7GA",authDomain:"vision-identity.firebaseapp.com",databaseURL:"https://vision-identity.firebaseio.com",projectId:"vision-identity",storageBucket:"vision-identity.appspot.com",messagingSenderId:"1091015811145",appId:"1:1091015811145:web:30bd18e335564b5be65f98",measurementId:"G-2ZMW0R12GQ"});var r,c,o=a.auth(),l=a.database(),i=(a.storage(),function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0;return console.log("firebase.REF: ",e,t),l.ref("/".concat(e))}),s=function(e,t){return o.signInWithEmailAndPassword(e,t)},u=function(e,t){return o.createUserWithEmailAndPassword(e,t)},d=function(){return o.signOut()};t.b={AUTH:o,DB:l,REF:i,create:function(e,t){i(e).set(t)},updateItem:function(e,t){var n,a,r;l.ref().update((r=t,(a=e)in(n={})?Object.defineProperty(n,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[a]=r,n))},get:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(e){console.log("firebase.get(snapshot) UNDEFINED",e)};i(e).once("value").then((function(e){t(e)}))},watch:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{onChange:function(e){return console.log("firebase.watch: onChange(snapshot) UNDEFINED",e)},onAddItem:function(e){return console.log("firebase.watch: onItemAdd(snapshot) UNDEFINED",e)},onChangeItem:function(e){return console.log("firebase.watch: onItemChange(snapshot) UNDEFINED",e)},onDeleteItem:function(e){return console.log("firebase.watch: onItemDelete(snapshot) UNDEFINED",e)}},n=t.onChange,a=t.onAddItem,r=t.onChangeItem,c=t.onDeleteItem;n&&i(e).on("value",(function(e){n(e)})),r&&i(e).on("value",(function(e){r(e)})),a&&i(e).on("value",(function(e){a(e)})),c&&i(e).on("child_removed",(function(e){c(e)}))},logOut:d,signOut:d,emailAuthLogin:s,login:s,emailAuthRegister:u,register:u},r="testing",c={hello:"world"},i("my/test").child(r).set(c)},1141:function(e,t,n){"use strict";var a=n(25),r=n.n(a),c=n(1143);function o(e,t,n,a,r,c,o){try{var l=e[c](o),i=l.value}catch(e){return void n(e)}l.done?t(i):Promise.resolve(i).then(a,r)}function l(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var c=e.apply(t,n);function l(e){o(c,a,r,l,i,"next",e)}function i(e){o(c,a,r,l,i,"throw",e)}l(void 0)}))}}console.log("HELLOOOO",{apiURL:"".concat(c.a.apiUrl.slides)});var i=function(){var e=l(regeneratorRuntime.mark((function e(t){var n,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.appName,a=t.resource,t.id,t.query,e.next=3,m("GET","".concat(c.a.apiUrl[n],"/").concat(n,"/").concat(a));case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),s=function(){var e=l(regeneratorRuntime.mark((function e(t){var n,a,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.appName,a=t.resource,r=t.data,e.next=3,m("POST","".concat(c.a.apiUrl[n],"/").concat(n,"/").concat(a),r);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),u=function(){var e=l(regeneratorRuntime.mark((function e(t){var n,a,r,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.appName,a=t.resource,r=t.id,o=t.data,e.next=3,m("PATCH","".concat(c.a.apiUrl[n],"/").concat(n,"/").concat(a,"/").concat(r),o);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),d=function(){var e=l(regeneratorRuntime.mark((function e(t){var n,a,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.appName,a=t.resource,r=t.id,e.next=3,m("DELETE","".concat(c.a.apiUrl[n],"/").concat(n,"/").concat(a,"/").concat(r));case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),m=function(){var e=l(regeneratorRuntime.mark((function e(t,n,a){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,r()({url:n,method:t,data:a});case 3:return e.abrupt("return",e.sent);case 6:e.prev=6,e.t0=e.catch(0),console.warn("ERROR: ".concat(err));case 9:case"end":return e.stop()}}),e,null,[[0,6]])})));return function(t,n,a){return e.apply(this,arguments)}}();t.a={POSTResource:s,PATCHResource:u,GETResource:i,DELETEResource:d,handleError:function(e){return function(t){e({type:"error",message:t})}}}},1143:function(e,t,n){"use strict";(function(e){var a=n(1097),r=n(47),c=e.env,o=e.pid,l=c.port||8005;e.env.CSC_IDENTITY_AUTO_DISCOVERY=!1;"http://localhost:".concat(l);var i="https://studio.vis-ion.io",s={development:{identity:"http://localhost:".concat(3e3,"/api"),slides:"http://localhost:".concat(3010,"/api"),schools:"http://localhost:".concat(3020,"/api")},sandbox:{identity:"http://locahost:8005/api/identity",slides:"http://locahost:8005/api/slides",schools:"http://localhost:8005/api/schools"}},u={appName:r.name,version:r.version,appUrl:i,apiUrl:s.production,environment:"production",port:l,pid:o,platform:a.platform()};console.log(u),t.a=u}).call(this,n(24))},1155:function(e,t){},1156:function(e,t,n){e.exports=n.p+"assets/images/schedules_create.gif"},1157:function(e,t,n){e.exports=n.p+"assets/images/schedules_event_create.gif"},1158:function(e,t,n){e.exports=n.p+"assets/images/schedules_actions.gif"},1159:function(e,t){}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,