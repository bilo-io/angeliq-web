(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{1151:function(e,t){e.exports=[{company:"Fuzzy Logic Studio",website:"http://fuzzylogicstudio.io",logo:"https://media-exp1.licdn.com/dms/image/C4E0BAQHqB9qfO9QgOA/company-logo_200_200/0?e=2159024400&v=beta&t=owCnCDvEJtkgegF5lnTqMnemP5Kq2YpfFwxPXSSD_As",summary:"AR/VR applications to solve real-world problems",employeeTitle:"Senior Software Engineer",startDate:new Date,endDate:new Date,stack:["Unity",".NET","Azure"],roles:[{name:"Senior Engineer",duration:(Date.now-new Date("2020/06/15")).toString()}]},{company:"Zappi",website:"https://www.zappi.io/web/",logo:"https://assets.zappi.io/website-api/wp-files/2018/08/02135602/ZappiStore_Logo.png",summary:"The ad and innovation testing platform built by brands for brands.",employeeTitle:"Fullstack Engineer",startDate:new Date("2018/10/30"),endDate:new Date("2020/06/09"),stack:["D3.js","React","Rails","Node","AWS"],roles:[{name:"D3.js Visualization",duration:(Date.now-new Date("2020/06/15")).toString()},{name:"Fullstack Engineer",duration:new Date("2017/08/30")-new Date("2020/06/09")}]},{company:"WhereIsMyTransport",website:"https://www.whereismytransport.com/",logo:"https://res-5.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco/v1472652782/bhbvpzneyrt5hmpi1tzt.png",summary:"Empowering people everywhere to get where they want to go.",employeeTitle:"Fullstack Engineer",startDate:new Date("2013/11/04"),endDate:new Date("2017/08/25"),roles:[{name:"Frontend Engineer",duration:(Date.now-new Date("2020/06/15")).toString(),stack:["React","Angular","Webpack","Azure"]},{name:".NET Engineer",duration:(Date.now-new Date("2020/06/15")).toString(),stack:["C#",".NET","Azure"]},{name:"iOS Engineer (Objective-C)",duration:(Date.now-new Date("2020/06/15")).toString(),stack:["Objective-C","iOS"]}]}]},1168:function(e,t,n){"use strict";n.r(t),n.d(t,"WebRouter",(function(){return h}));var a=n(0),o=n.n(a),r=n(5),i=n(6),l=n.n(i),c=n(9),s=n(31),u=n(142),m=n.n(u);n(143);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function w(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function f(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function b(e,t){return!t||"object"!==p(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function y(e,t){return(y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var g=n(1151),E=function(e){function t(){var e,n,a;w(this,t);for(var o=arguments.length,r=new Array(o),i=0;i<o;i++)r[i]=arguments[i];return b(a,(n=a=b(this,(e=d(t)).call.apply(e,[this].concat(r))),a.openUrl=function(e){return function(){window.open(e,"_blank")}},n))}var n,a,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&y(e,t)}(t,e),n=t,(a=[{key:"render",value:function(){var e=this;return o.a.createElement("div",{className:"portfolio"},o.a.createElement(s.b,{src:m.a},o.a.createElement("div",{className:"profile"},o.a.createElement("div",{className:"title"},"Tech"),o.a.createElement("img",{src:"https://media-exp1.licdn.com/dms/image/C4E03AQEgRh1THSiRKw/profile-displayphoto-shrink_400_400/0?e=1601510400&v=beta&t=1lILU5SWKpRYtjnhui9WSyt8PnPqnRkxfdQNo8V8qA0"}),o.a.createElement("div",{className:"xflex-col"},o.a.createElement("div",{className:"name"},"Bilo Lwabona"),o.a.createElement("div",{className:"flex-row",style:{height:"1rem",color:"white"}},[{icon:"linkedin",url:"https://www.linkedin.com/in/bilolwabona/"},{icon:"github",url:"http://github.com/bilo-io"},{icon:"twitter",url:""},{icon:"gitlab",url:"https://gitlab.com/bilo.lwabona"},{icon:"stack-overflow",url:"https://stackoverflow.com/users/3795774/bilo-io"},{icon:"unity",url:"https://answers.unity.com/users/84651/bilolwabona.html#84651-activity-block"},{icon:"skype",url:"skype:bilo89za"}].map((function(e,t){return o.a.createElement(l.a,{name:e.icon,key:t,style:{margin:"0.2rem"}})}))))),g.map((function(t,n){return o.a.createElement("div",{className:"experience"},o.a.createElement("div",{className:"flex-row"},o.a.createElement("div",{className:"dates"},t.startDate.getFullYear().toString()," - ",t.endDate.getFullYear().toString()),o.a.createElement("img",{src:t.logo,onClick:e.openUrl(t.website)}),o.a.createElement(c.w,{defaultTab:"EXPERIENCE",tabs:["EXPERIENCE","education","skills","misc","tkd"],EXPERIENCE:o.a.createElement("div",{className:"header"},o.a.createElement("div",{className:"company-name"},t.company),o.a.createElement("div",{className:"employee-title"},t.employeeTitle),o.a.createElement("div",{className:"roles"},t.roles.map((function(e,t){return o.a.createElement("div",{className:"role"},e.name)}))))})))}))))}}])&&f(n.prototype,a),r&&f(n,r),t}(a.Component),h=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(r.b,{exact:!0,path:"".concat("/web"),render:function(){return o.a.createElement(r.a,{to:"".concat("/web")})}}),o.a.createElement(r.b,{exact:!0,path:"".concat("/web","/portfolio"),component:E}))};t.default=h}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,